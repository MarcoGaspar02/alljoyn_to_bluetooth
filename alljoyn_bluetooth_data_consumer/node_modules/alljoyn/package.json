{
  "name": "alljoyn",
  "version": "1.0.0",
  "description": "Alljoyn NodeJS Integration",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "install": "node-gyp rebuild"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/octoblu/alljoyn"
  },
  "keywords": [
    "alljoyn",
    "iot",
    "octoblu"
  ],
  "author": {
    "name": "Octoblu"
  },
  "license": "ISC",
  "gypfile": true,
  "bugs": {
    "url": "https://github.com/octoblu/alljoyn/issues"
  },
  "homepage": "https://github.com/octoblu/alljoyn",
  "dependencies": {
    "bindings": "^1.2.1",
    "nan": "^1.2.0"
  },
  "readme": "# AllJoyn\n\n## Installation\n\n`npm install alljoyn`\n\n## Usage\n\n```js\nvar alljoyn = require('alljoyn');\n\n// create a bus and sessionId\nvar bus = alljoyn.BusAttachment('myAppName');\nvar sessionId = 0;\n\n// create interface description\nvar interface = alljoyn.InterfaceDescription();\n\n// create listener\nvar listener = alljoyn.BusListener(\n  function(name){\n    console.log(\"FoundAdvertisedName\", name);\n\n    //join session, sessionId is used to send messages.\n    sessionId = bus.joinSession(name, portNumber, 0);\n\n  \t// send a signal message\n    object.signal(null, sessionId, interface, \"Chat\", \"Hello, I am a client!\");\n  },\n  function(name){\n    console.log(\"LostAdvertisedName\", name);\n  },\n  function(name){\n    console.log(\"NameOwnerChanged\", name);\n  }\n);\n\n// create the interface\nbus.createInterface('org.alljoyn.bus.samples.chat', interface);\n\n// add a signal to the interface, specifying what kind of message we will accept\n// s = string, d = number, b = boolean\ninterface.addSignal(\"Chat\", \"s\",  \"msg\");\n\n// register the listener on the bus\nbus.registerBusListener(listener)\n\n// initialize the bus\nbus.start();\n\n// create the BusObject that will send and receive messages\nvar object = alljoyn.BusObject(\"/chatService\");\n\n// start listening\nbus.connect();\n\n// discover devices with prefix 'org.alljoyn'\nbus.findAdvertisedName('org.alljoyn.bus.samples.chat')\n\n// create a SessionPortListener for session changes\nvar portListener = alljoyn.SessionPortListener(\n\tfunction(port, joiner){\n  \t\tconsole.log(\"AcceptSessionJoiner\", port, joiner);\n  \t\t\n  \t\t// return true to accept the new session member\n  \t\treturn true;\n\t},\n\tfunction(port, sessId, joiner){\n    \tsessionId = sessId;\n\t  \tconsole.log(\"SessionJoined\", port, sessionId, joiner);\n\t}\n);\n\n// add the chat interface to the BusObject\nobject.addInterface(interface);\n\n// register signal handler for BusObject\n// this function will be called for each received message\nbus.registerSignalHandler(object, \n\tfunction(msg, info){\n  \t\tconsole.log(\"Message received: \", msg, info);\n\t},\n\tinterface, \"Chat\");\n\n```\n\n## Currently Supported Operating Systems\n\n* Mac OSX\n* Linux (Ubuntu 14.04 tested)\n\n## License\n\n[ISC](http://en.wikipedia.org/wiki/ISC_license)\n",
  "readmeFilename": "README.md",
  "_id": "alljoyn@1.0.0",
  "_from": "alljoyn@"
}
